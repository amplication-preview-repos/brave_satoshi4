/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { AppointmentsCreateNestedManyWithoutEmployeesItemsInput } from "./AppointmentsCreateNestedManyWithoutEmployeesItemsInput";
import { Type } from "class-transformer";
import { ReviewsCreateNestedManyWithoutEmployeesItemsInput } from "./ReviewsCreateNestedManyWithoutEmployeesItemsInput";
import { StoresWhereUniqueInput } from "../../stores/base/StoresWhereUniqueInput";
import { StoresCreateNestedManyWithoutEmployeesItemsInput } from "./StoresCreateNestedManyWithoutEmployeesItemsInput";

@InputType()
class EmployeesCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => AppointmentsCreateNestedManyWithoutEmployeesItemsInput,
  })
  @ValidateNested()
  @Type(() => AppointmentsCreateNestedManyWithoutEmployeesItemsInput)
  @IsOptional()
  @Field(() => AppointmentsCreateNestedManyWithoutEmployeesItemsInput, {
    nullable: true,
  })
  appointmentsItems?: AppointmentsCreateNestedManyWithoutEmployeesItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  availability?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  avatar?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fullName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  refreshToken?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReviewsCreateNestedManyWithoutEmployeesItemsInput,
  })
  @ValidateNested()
  @Type(() => ReviewsCreateNestedManyWithoutEmployeesItemsInput)
  @IsOptional()
  @Field(() => ReviewsCreateNestedManyWithoutEmployeesItemsInput, {
    nullable: true,
  })
  reviewsItems?: ReviewsCreateNestedManyWithoutEmployeesItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  role?: string | null;

  @ApiProperty({
    required: false,
    type: () => StoresWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StoresWhereUniqueInput)
  @IsOptional()
  @Field(() => StoresWhereUniqueInput, {
    nullable: true,
  })
  store?: StoresWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => StoresCreateNestedManyWithoutEmployeesItemsInput,
  })
  @ValidateNested()
  @Type(() => StoresCreateNestedManyWithoutEmployeesItemsInput)
  @IsOptional()
  @Field(() => StoresCreateNestedManyWithoutEmployeesItemsInput, {
    nullable: true,
  })
  storesItems?: StoresCreateNestedManyWithoutEmployeesItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string | null;
}

export { EmployeesCreateInput as EmployeesCreateInput };
