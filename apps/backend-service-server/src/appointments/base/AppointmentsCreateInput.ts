/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSONValue } from "../../validators";
import { IsOptional, ValidateNested, IsString } from "class-validator";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { CustomersWhereUniqueInput } from "../../customers/base/CustomersWhereUniqueInput";
import { Type } from "class-transformer";
import { EmployeesWhereUniqueInput } from "../../employees/base/EmployeesWhereUniqueInput";
import { PaymentsCreateNestedManyWithoutAppointmentsItemsInput } from "./PaymentsCreateNestedManyWithoutAppointmentsItemsInput";
import { ServicesWhereUniqueInput } from "../../services/base/ServicesWhereUniqueInput";

@InputType()
class AppointmentsCreateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  appointmentTime?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => CustomersWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomersWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomersWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomersWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => EmployeesWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EmployeesWhereUniqueInput)
  @IsOptional()
  @Field(() => EmployeesWhereUniqueInput, {
    nullable: true,
  })
  employee?: EmployeesWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => PaymentsCreateNestedManyWithoutAppointmentsItemsInput,
  })
  @ValidateNested()
  @Type(() => PaymentsCreateNestedManyWithoutAppointmentsItemsInput)
  @IsOptional()
  @Field(() => PaymentsCreateNestedManyWithoutAppointmentsItemsInput, {
    nullable: true,
  })
  paymentsItems?: PaymentsCreateNestedManyWithoutAppointmentsItemsInput;

  @ApiProperty({
    required: false,
    type: () => ServicesWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ServicesWhereUniqueInput)
  @IsOptional()
  @Field(() => ServicesWhereUniqueInput, {
    nullable: true,
  })
  service?: ServicesWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  status?: string | null;
}

export { AppointmentsCreateInput as AppointmentsCreateInput };
