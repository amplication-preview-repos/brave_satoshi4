/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { JsonFilter } from "../../util/JsonFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { CustomersWhereUniqueInput } from "../../customers/base/CustomersWhereUniqueInput";
import { EmployeesWhereUniqueInput } from "../../employees/base/EmployeesWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { PaymentsListRelationFilter } from "../../payments/base/PaymentsListRelationFilter";
import { ServicesWhereUniqueInput } from "../../services/base/ServicesWhereUniqueInput";
import { StringNullableFilter } from "../../util/StringNullableFilter";

@InputType()
class AppointmentsWhereInput {
  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  appointmentTime?: JsonFilter;

  @ApiProperty({
    required: false,
    type: () => CustomersWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomersWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomersWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomersWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => EmployeesWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EmployeesWhereUniqueInput)
  @IsOptional()
  @Field(() => EmployeesWhereUniqueInput, {
    nullable: true,
  })
  employee?: EmployeesWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => PaymentsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaymentsListRelationFilter)
  @IsOptional()
  @Field(() => PaymentsListRelationFilter, {
    nullable: true,
  })
  paymentsItems?: PaymentsListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ServicesWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ServicesWhereUniqueInput)
  @IsOptional()
  @Field(() => ServicesWhereUniqueInput, {
    nullable: true,
  })
  service?: ServicesWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  status?: StringNullableFilter;
}

export { AppointmentsWhereInput as AppointmentsWhereInput };
