/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AppointmentsCreateNestedManyWithoutServicesItemsInput } from "./AppointmentsCreateNestedManyWithoutServicesItemsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsInt,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { ReviewsCreateNestedManyWithoutServicesItemsInput } from "./ReviewsCreateNestedManyWithoutServicesItemsInput";
import { StoresWhereUniqueInput } from "../../stores/base/StoresWhereUniqueInput";
import { StoresCreateNestedManyWithoutServicesItemsInput } from "./StoresCreateNestedManyWithoutServicesItemsInput";

@InputType()
class ServicesCreateInput {
  @ApiProperty({
    required: false,
    type: () => AppointmentsCreateNestedManyWithoutServicesItemsInput,
  })
  @ValidateNested()
  @Type(() => AppointmentsCreateNestedManyWithoutServicesItemsInput)
  @IsOptional()
  @Field(() => AppointmentsCreateNestedManyWithoutServicesItemsInput, {
    nullable: true,
  })
  appointmentsItems?: AppointmentsCreateNestedManyWithoutServicesItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  duration?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: () => ReviewsCreateNestedManyWithoutServicesItemsInput,
  })
  @ValidateNested()
  @Type(() => ReviewsCreateNestedManyWithoutServicesItemsInput)
  @IsOptional()
  @Field(() => ReviewsCreateNestedManyWithoutServicesItemsInput, {
    nullable: true,
  })
  reviewsItems?: ReviewsCreateNestedManyWithoutServicesItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  serviceName?: string | null;

  @ApiProperty({
    required: false,
    type: () => StoresWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StoresWhereUniqueInput)
  @IsOptional()
  @Field(() => StoresWhereUniqueInput, {
    nullable: true,
  })
  store?: StoresWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => StoresCreateNestedManyWithoutServicesItemsInput,
  })
  @ValidateNested()
  @Type(() => StoresCreateNestedManyWithoutServicesItemsInput)
  @IsOptional()
  @Field(() => StoresCreateNestedManyWithoutServicesItemsInput, {
    nullable: true,
  })
  storesItems?: StoresCreateNestedManyWithoutServicesItemsInput;
}

export { ServicesCreateInput as ServicesCreateInput };
