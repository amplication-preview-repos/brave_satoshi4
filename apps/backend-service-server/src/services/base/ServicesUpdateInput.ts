/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AppointmentsUpdateManyWithoutServicesItemsInput } from "./AppointmentsUpdateManyWithoutServicesItemsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsInt,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { ReviewsUpdateManyWithoutServicesItemsInput } from "./ReviewsUpdateManyWithoutServicesItemsInput";
import { StoresWhereUniqueInput } from "../../stores/base/StoresWhereUniqueInput";
import { StoresUpdateManyWithoutServicesItemsInput } from "./StoresUpdateManyWithoutServicesItemsInput";

@InputType()
class ServicesUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AppointmentsUpdateManyWithoutServicesItemsInput,
  })
  @ValidateNested()
  @Type(() => AppointmentsUpdateManyWithoutServicesItemsInput)
  @IsOptional()
  @Field(() => AppointmentsUpdateManyWithoutServicesItemsInput, {
    nullable: true,
  })
  appointmentsItems?: AppointmentsUpdateManyWithoutServicesItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  duration?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: () => ReviewsUpdateManyWithoutServicesItemsInput,
  })
  @ValidateNested()
  @Type(() => ReviewsUpdateManyWithoutServicesItemsInput)
  @IsOptional()
  @Field(() => ReviewsUpdateManyWithoutServicesItemsInput, {
    nullable: true,
  })
  reviewsItems?: ReviewsUpdateManyWithoutServicesItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  serviceName?: string | null;

  @ApiProperty({
    required: false,
    type: () => StoresWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StoresWhereUniqueInput)
  @IsOptional()
  @Field(() => StoresWhereUniqueInput, {
    nullable: true,
  })
  store?: StoresWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => StoresUpdateManyWithoutServicesItemsInput,
  })
  @ValidateNested()
  @Type(() => StoresUpdateManyWithoutServicesItemsInput)
  @IsOptional()
  @Field(() => StoresUpdateManyWithoutServicesItemsInput, {
    nullable: true,
  })
  storesItems?: StoresUpdateManyWithoutServicesItemsInput;
}

export { ServicesUpdateInput as ServicesUpdateInput };
